directive @goModel(model: String, models: [String!]) on OBJECT
  | INPUT_OBJECT
  | SCALAR
  | ENUM
  | INTERFACE
  | UNION

directive @goField(forceResolver: Boolean, name: String, omittable: Boolean) on INPUT_FIELD_DEFINITION
  | FIELD_DEFINITION

type Post @goModel(model: "internal/models/models.Post"){
  id: ID!
  title: String!
  content: String!
  commentsEnabled: Boolean!
  comments: [Comment!]!  @goField(forceResolver: true)
}

type Comment @goModel(model: "internal/models/models.Comment"){
  id: ID!
  content: String!
  postID: ID!
  parentID: ID
  children: [Comment!]!  @goField(forceResolver: true)
}

type Query {
  posts: [Post!]!
  post(id: ID!): Post
  comments(postID: ID!, page: Int, pageSize: Int): [Comment!]!
}

type Mutation {
  createPost(title: String!, content: String!, commentsEnabled: Boolean!): Post!
  createComment(postID: ID!, parentID: ID, content: String!): Comment!
}

type Subscription {
  commentAdded(postID: ID!): Comment!
}
